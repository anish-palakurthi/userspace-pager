Describe the environment and workloads for your experiments comparing apager, dpager, hpager. Include at least 3 different workloads.
All test programs were compiled using gcc 11.4.0 with -O2 optimization and static linking, using the standard 4KB page size. Three distinct workloads were designed to evaluate different aspects of the pagers. The first workload focused on sequential array access, using a 10MB static array with sequential initialization and access patterns, which was chosen to evaluate the effectiveness of the hybrid pager's prediction algorithm and the overhead of demand paging. The second workload was BSS-heavy, featuring multiple large uninitialized arrays totaling 40MB with mixed access patterns (both sequential and random access), specifically designed to test the hybrid pager's BSS handling capabilities versus the other approaches. The third workload implemented a matrix multiplication program using 1024x1024 matrices, chosen for its complex memory access patterns combining sequential and strided access, which helps evaluate how each pager handles more realistic program behavior. These workloads were selected to provide a comprehensive evaluation of the pagers under different memory access patterns and program behaviors, allowing us to measure and compare their performance characteristics in terms of execution time, page faults, and memory usage.

